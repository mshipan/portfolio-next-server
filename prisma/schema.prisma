
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  email String @unique
  password String
  name String?
  role String @default("owner")
  createdAt DateTime @default(now())
  blogs Blog[]
}

model Blog {
  id String @id @default(cuid())
  authorId String
  author User @relation(fields: [authorId], references: [id])
  title String
  slug String @unique
  summary String?
  content String
  published Boolean @default(false)
  coverUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id String @id @default(cuid())
  title String
  slug String @unique
  description String
  techStack String[]
  features String[]
  featured Boolean @default(false)
  repoUrl String?
  liveUrl String?
  thumbnail String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model About {
  id String @id @default(cuid())
  name String
  title String
  bio String
  email String
  phone String?
  address String?
  skills String[]
  experiences Experience[]
  educations Education[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Experience {
  id String @id @default(cuid())
  jobTitle String
  company String
  startYear String
  endYear String?
  description String?
  aboutId String
  about About @relation(fields: [aboutId], references: [id], onDelete: Cascade)
}

model Education {
  id String @id @default(cuid())
  degree String
  institution String
  startYear String
  endYear String?
  description String?
  aboutId String
  about About @relation(fields: [aboutId], references: [id], onDelete: Cascade)
}